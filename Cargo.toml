[package]
authors = ["Miri Team"]
description = "An experimental interpreter for Rust MIR (core driver)."
license = "MIT OR Apache-2.0"
name = "miri"
repository = "https://github.com/rust-lang/miri"
version = "0.1.0"
default-run = "miri"
edition = "2021"

[lib]
test = true # we have unit tests
doctest = false # but no doc tests

[[bin]]
name = "miri"
test = false # we have no unit tests
doctest = false # and no doc tests

[dependencies]
getrandom = { version = "0.2", features = ["std"] }
rand = "0.8"
smallvec = "1.7"
aes = { version = "0.8.3", features = ["hazmat"] }
measureme = "11"
ctrlc = "3.2.5"

rustc_data_structures = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_data_structures" }
rustc_span = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_span" }
rustc_ast = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_ast" }
rustc_middle = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_middle" }
rustc_index = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_index" }
rustc_target = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_target" }
rustc_hir = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_hir" }
rustc_session = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_session" }

rustc_const_eval = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_const_eval" }
rustc_errors = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_errors" }
rustc_driver = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_driver" }
rustc_macros = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_macros" }
rustc_interface = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_interface" }
rustc_log = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_log" }
rustc_metadata = { path = "C:\\Users\\chy\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\lib\\rustlib\\rustc-src\\rust\\compiler\\rustc_metadata" }


tracing = "0.1.30"

either = "1.10.0"
rustc_apfloat = "0.2.0"
# Copied from `compiler/rustc/Cargo.toml`.
# But only for some targets, it fails for others. Rustc configures this in its CI, but we can't
# easily use that since we support of-tree builds.
[target.'cfg(any(target_os = "linux", target_os = "macos"))'.dependencies.jemalloc-sys]
version = "0.5.0"
features = ['unprefixed_malloc_on_supported_platforms']

[target.'cfg(unix)'.dependencies]
libc = "0.2"

[target.'cfg(target_os = "linux")'.dependencies]
libffi = "3.2.0"
libloading = "0.8"

[dev-dependencies]
colored = "2"
ui_test = "0.21.1"
rustc_version = "0.4"
regex = "1.5.5"
lazy_static = "1.4.0"
tempfile = "3"

[package.metadata.rust-analyzer]
# This crate uses #[feature(rustc_private)].
# See https://github.com/rust-analyzer/rust-analyzer/pull/7891
rustc_private = true

[[test]]
name = "ui"
harness = false

[features]
default = ["stack-cache"]
stack-cache = []

# Be aware that this file is inside a workspace when used via the
# submodule in the rustc repo. That means there are many cargo features
# we cannot use, such as profiles.
